avaScript 是一门编程语言，可为网站添加交互功能
        （例如：游戏、动态样式、动画以及在按下按钮或收到表单数据时做出的响应等）。

JavaScript（缩写：JS）是一门完备的动态编程语言。
        当应用于 HTML 文档时，可为网站提供动态交互特性。

JavaScript 的应用场合极其广泛，
        简单到幻灯片、照片库、浮动布局和响应按钮点击，复杂到游戏、2D/3D 动画、大型数据库驱动程序等等。


JavaScript 相当简洁，却非常灵活。
        开发者们基于 JavaScript 核心编写了大量实用工具，可以使 开发工作事半功倍。其中包括：

·浏览器应用程序接口（API）—— 浏览器内置的 API 提供了丰富的功能，
        比如：动态创建 HTML 和设置 CSS 样式、从用户的摄像头采集处理视频流、生成 3D 图像与音频样本等等。
·第三方 API —— 让开发者可以在自己的站点中整合其他内容提供者（Twitter、Facebook 等）提供的功能。
·第三方框架和库 —— 用来快速构建网站和应用。



备注： 我们将 script 放在 HTML 文件的底部附近的原因是浏览器会按照代码在文件中的顺序加载 HTML。
    如果先加载的 JavaScript 期望修改其下方的 HTML，那么它可能由于 HTML 尚未被加载而失效。
    因此，将 JavaScript 代码放在 HTML 页面的底部附近通常是最好的策略。


变量（Variable）
变量 是存储值的容器。要声明一个变量，先输入关键字 let 或 var，然后输入合适的名称：

let myVariable;

备注： 行末的分号表示当前语句结束，不过只有在单行内需要分割多条语句时，这个分号才是必须的。
        然而，一些人认为每条语句末尾加分号是一种好的风格。分号使用规则的更多细节请参阅 JavaScript 分号使用指南 
        http://news.codecademy.com/your-guide-to-semicolons-in-javascript/（英文页面）

备注： 几乎任何内容都可以作为变量名，
        但还是有一些限制（请参阅 变量命名规则https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Grammar_and_types#变量）。
        如果你不确定，还可以 验证变量名https://mothereff.in/js-variables 是否有效。

备注： JavaScript 对大小写敏感，myVariable 和 myvariable 是不同的。如果代码出现问题了，先检查一下大小写！


备注： 想要了解更多关于 var 和 let 的不同点，
        可以参阅 var 与 let https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/First_steps/Variables#var_与_let_的区别的区别。

变量定义后可以进行赋值：
        myVariable = "李雷";
也可以将定义、赋值操作写在同一行：
        let myVariable = "李雷";

变量在赋值后是可以更改的：
        let myVariable = '李雷';
        myVariable = '韩梅梅';


注意变量可以有不同的 数据类型 ：

变量	解释	示例
String	字符串（一串文本）：字符串的值必须用引号（单双均可，必须成对）括起来。	let myVariable = '李雷';
Number	数字：无需引号。	let myVariable = 10;
Boolean	布尔值（真 / 假）： true/false 是 JS 里的特殊关键字，无需引号。	let myVariable = true;
Array	数组：用于在单一引用中存储多个值的结构。	let myVariable = [1, '李雷', '韩梅梅', 10];
                                                   元素引用方法：myVariable[0], myVariable[1] ……
Object	对象：JavaScript 里一切皆对象，一切皆可储存在变量里。这一点要牢记于心。	let myVariable = document.querySelector('h1');
                                                                        以及上面所有示例都是对象。

                                
表达式和运算符。https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators


函数 用来封装可复用的功能。如果没有函数，一段特定的操作过程用几次就要重复写几次，而使用函数则只需写下函数名和一些简短的信息。
https://developer.mozilla.org/zh-CN/docs/Glossary/Function
之前已经涉及过一些函数，比如：

let myVariable = document.querySelector("h1");
alert("hello!");
document.querySelector 和 alert 是浏览器内置的函数，随时可用。

如果代码中有一个类似变量名后加小括号 () 的东西，很可能就是一个函数。函数通常包括参数，参数中保存着一些必要的数据。
它们位于括号内部，多个参数之间用逗号分开。

比如， alert() 函数在浏览器窗口内弹出一个警告框，还应为其提供一个字符串参数，以告诉它警告框里要显示的内容。

好消息是：人人都能定义自己的函数。下面的示例是为两个参数进行乘法运算的函数：
function multiply(num1, num2) {
        let result = num1 * num2;
        return result;
}

multiply(4, 7);
multiply(20, 20);
multiply(0.5, 3);

备注： return 语句告诉浏览器当前函数返回 result 变量。这是一点很有必要，因为函数内定义的变量只能在函数内使用。
这叫做变量的 作用域。（详见 变量作用域。）https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Grammar_and_types#variable_scope


事件
事件能为网页添加真实的交互能力。它可以捕捉浏览器操作并运行一些代码做为响应。
最简单的事件是点击事件，鼠标的点击操作会触发该事件。https://developer.mozilla.org/zh-CN/docs/Web/API/Element/click_event
可尝试将下面的代码输入到控制台，然后点击页面的任意位置：

document.querySelector("html").addEventListener("click", function () {
        alert("别戳我，我怕疼。");
});

刚刚我们传递给 addEventListener() 的函数被称为匿名函数，因为它没有名字。
匿名函数还有另一种我们称之为箭头函数的写法，箭头函数使用 () => 代替 function ()

document.querySelector("html").addEventListener("click", () =>{
        alert("别戳我，我怕疼。");
});


添加个性化欢迎信息
下面来添加另一段代码，在用户初次进入站点时将网页的标题改成一段个性化欢迎信息（即在标题中添加用户的名字）。
名字信息会由 Web Storage API 保存下来，即使用户关闭页面之后再重新打开，仍可得到之前的信息。
还会添加一个选项，可以根据需要改变用户名字以更新欢迎信息。


第一次访问网页时，页面将询问用户名并发出一段个性化的信息。可随时点击按钮来改变用户名。
告诉你一个额外的福利，因为用户名是保存在 localStorage 里的，网页关闭后也不会丢失，所以重新打开浏览器时所设置的名字信息将依然存在:)


用户名为 null?
运行示例代码，弹出输入用户名的对话框，试着按下 取消 按钮。此时标题会显示为“Mozilla 酷毙了，null”。
这是因为取消提示对话框后值将设置为 null，这是 JavaScript 中的一个特殊值，表示引用不存在。

也可以不输入任何名字直接按 确认，你的标题会显示为“Mozilla 酷毙了，”，原因么显而易见。

要避免这些问题，应该更新 setUserName() 来检查用户是否输入了 null 或者空名字：